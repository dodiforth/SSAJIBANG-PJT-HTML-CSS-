/* Global Styling Starts Here*/
body {
    margin: 0;
    border-collapse: collapse;
}

h1, h2, h3, h4 {
    font-family: 'Nunito', sans-serif;
    font-weight: 600;
}

p, button{
    font-family: 'Montserrat', sans-serif;
    font-weight: 300;
}

div, input, textarea {
    box-sizing: border-box;
}

p,h4,h3,h2,h1,span {
    transform: rotate(0.003deg);
}

/* Global Styling Ends Here */

/* Main */
.main-background {
    width: 100vw;
    height: 600px;
    margin: 0;
    background: linear-gradient(70deg, rgb(57, 57, 255), pink);
    /* padding: 10px; */
}

.main-background .main-right img{
    float: right;
    height: 100%;
    width: fit-content;
}

.main-left {
    float: left;
    width: 60%;
    height: 100%;
    
    padding: 50px;
}

.main-right {
    float: right;
    width: 30%;
    height: 600px;
}

.main-title {
    margin: 0 30px 30px 0;
    /* top right bottom left */
    font-size: 50px;
    color: white;
}

.main-text {
    margin: 0 0 50px 0;
    font-size: 18px;
    color: white;
}

.btn {
    background-color: rgb(71, 71, 71);
    color: white;
    border: none;
    padding: 20px;
    border-radius: 5%;
    font-size: 16px;
}

/* Middle */
.middle-ground {
    width: 100%;

    /* THIS !!!!! FIXED THE BUG !!!! */
    height: fit-content;
    /* As set the height to fit-content, it finally literally contains all 3 elements */

    text-align: center;
    padding: 3em;
}

.middle-btn {
    margin: 30px 0 50px 0;
    
}

.middle-ground h4 {
    font-size: 20px;
    margin: 0;
}

.middle-ground p {
    display: inline-block;
}

/* Service */

.service-container {
    background-color: rgb(78,97,192);
    width: 100vw;
    height: 400px;
    margin: auto;
}

.service-container h4 {
    color: white;
    font-size: 20px;
}

.service-container p {
    font-size: 13px;
    color: white;
}

.service-slogan {
    padding: 3em;
    text-align: center;
}

.service-items {
    width: 100%;
    height: fit-content;
}

.service-item {
    float: left;
    margin: auto;
    width: 25%;
    height: 200px;
    text-align: center;
}

.service-item i {
    background-color: white;
    padding: 0.3em;
    border-radius: 50%;
    color: rgb(78,97,192);
}

/* Portfolio */

.portfolio-container {
    width: 100%;
    height: fit-content;
}

.portfolio-slogan {
    width: 100%;
    height: 100px;
    text-align: center;
    margin: 50px;
}

.portfolio-slogan h4 {
    font-size: 20px;
}

.portfolio-slogan p {
    font-size: 13px;
}


.portfolio-stations {
    width: 70%;
    height: 800px;
    margin: auto;
}

.stationary{
    float: left;
    width: 50%;
    height: 50%;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;

    /* border: 30px solid transparent; */

    box-shadow: inset 0px 0px 0px 1px transparent;
    transition: all 0.5s;
}

.stationary:hover {

    box-shadow: inset 0px 0px 0px 30px white;
}

.station-text {
    width: 70%;
    height: fit-content;
    margin-top: 50px;
    margin-left: 30px;
    color: white
}

.image-1 {
    background-image: url(/Portfolio01-Landing-Page/img/portfolio-1.jpg);
}

.image-2 {
    background-image: url(/Portfolio01-Landing-Page/img/portfolio-2.jpg);
}

.image-3 {
    background-image: url(/Portfolio01-Landing-Page/img/portfolio-3.jpg);
}

.image-4 {
    background-image: url(/Portfolio01-Landing-Page/img/portfolio-4.jpg);
}

/* Footer */

.footer {
    width: 100%;
    height: fit-content;
    text-align: center;
}

.footer-item {
    margin: 30px;
    padding-top: 80px;
    width: 100%;
    height: 200px;
}

.footer-item i {
    margin: 30px;
    color: white;
    background-color: rgb(78,97,192);
    padding: 0.3em;
    border-radius: 50%;
}

.footer-copyright {
    margin-top: 10px;
}

.footer-copyright p {
    display: inline;
    font-weight: bold;
}

.footer-copyright i {
    margin: 0;
    background-color: white;
    color: black;
}

/* Tablet 사이즈 */
@media screen and (max-width: 1200px) {

   
}

/* Mobile 사이즈 */
@media screen and (max-width: 850px) {

    .main-left {
        display: inline-block;
        width: 100%;
        height: 300px;
        padding: 50px;
        text-align: center;
    }
    
    .main-right {
        display: flex;
        justify-content: center;
        text-align: center;
        width: 100%;
        height: 500px;
    }

    .main-background {
        height: 800px;
        background: linear-gradient(70deg, rgb(57, 57, 255), pink);
    }

    .main-background .main-right img{
        /* float: right; */
        /* display: block; */
        height: 80%;
        width: 40%;
        margin-top: 100px;
    }

}



/* As below, the instructor's version  */

/* 
He wrote these first on the top of the CSS file.

body {
  margin: 0;
}
div {
  box-sizing: border-box;
}
h1 {
  font-size: 30px;
}
h4 {
  font-size: 22px;
}
*/

/* 
    1. 사이트 대문 레이아웃 만들기 

.main-background {
  background-image: linear-gradient(to bottom, #499add, #4e61c0);
  height: 550px;
  padding: 20px;
  color: white;
}
.main-container {
  max-width: 1200px;
  margin: auto;
} 
.main-text {
  float: left;
  margin-top: 50px;
}
.main-iphone {
  width: 400px;
  float: right;
  margin-top: 95px;
}

background-image: linear-gradient(to bottom, #499add, #4e61c0);

(설명1) 간단히 gradient 배경을 만들려면 포토샵 열지말고

linear-gradient 라는 속성을 쓰면 됩니다.

to bottom은 그레이디언트의 방향을 의미하고 뒤의 두개의 색상은 gradient 넣을 색상 두개를 집어넣으시면 됩니다. 

 

 

(설명2) float속성을 이용하시면 왼쪽 오른쪽 정렬을 각각 구현할 수 있으니

글자는 float : left 이미지는 float : right 주었습니다.

flex 그런거 써도 될듯  

 

 

(설명3) 요즘은 모니터들이 매우 거대해지고 있습니다. 가로 폭이 2000px 이상인 경우도 한번 생각해보셨나요?

대충 float만 써서 정렬한다면 매우 큰 모니터에서 이렇게 보일 수 있습니다.

(ctrl 누르고 마우스휠 다운을 계속 해보시면 큰 사이즈에서 여러분 사이트를 미리보기 하실 수 있습니다)

!!!!!!!!!!!!!!
explain1.png!!
!!!!!!!!!!!!!!

(이게뭐람)

이게 보기 싫다면

.main-container 박스의 최대 가로폭을 지정해주시면 저렇게 서로 멀리 떨어지지 않습니다.  

이런 박스는 나중에 자주 활용가능할듯요 

 

 

(설명4) 혹시 inline-block을 쓰기로했다면

서로 높이가 다른 글자와 그림 등에 전부 display inline-block 속성을 쓴다면 항상 vertical-align이 문제가 됩니다.

전부 글씨 비스무리한 취급을 받아서 글자들이 그림과 글자 상하정렬이 엉망이 될 수 있으니 

vertical-align을 항상 넣어주시면 되겠습니다.

*/

/* 
2. 검은색 버튼 디자인

.btn {
  padding: 15px 20px;
  font-size: 16px;
  font-family: 'nanumsquare';
  font-weight: 600;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
.btn-black {
  background: #444;
  color: white;
}
.btn-black:hover {
  마우스올렸을시 스타일
}
.btn-black:active {
  커서가찍혔을시 스타일 
}
그래서 이런 CSS 코드를 추가했습니다.

색넣기는 여러분도 잘할 수 있으니 여러분께 맡기겠습니다. 

*/

/* 
3. 대문 반응형 디자인

@media screen and (max-width : 992px) {
  .main-iphone {
    width: 260px;
    display: block;
    float: none;
    margin: auto;
    margin-top: 42px;
  }
  .main-text {
    float: none;
    margin-top: 50px;
    text-align: center;
  }
}

그래서 이런 코드를 CSS 파일 맨 밑에 추가했다고 합니다. 

그래서 제가 만든 레이아웃은 992px부터 이미지와 글자가 가운데 정렬을 해버립니다.

하지만 너무 폭이 줄어들면 버그가 발생할 수 있는데

아이폰 이미지가 밑으로 흘러내려갑니다.

(설명부분 글자가 매우 길면요)

!!!!!!!!!!!!!!
explain2.png!!
!!!!!!!!!!!!!!
▲ 저는 귀찮아서 버그를 디자인으로 승화하기 위해 border-bottom을 살짝 주었습니다.

귀찮아서 이렇게 한 것이므로 버그없이 하시려면 당연히

이미지에 position : absolute; bottom : 0px; 속성을 부여하고 그림을 싸매는 큰 박스엔 position : relative를 주시면 

이미지가 공중에 뜨기 때문에 글자 길어진다고 영향을 받지 않습니다.

또는 큰 파란 배경 박스의 height를 고정값으로 주지 않으셔도 쉽게 해결될 수 있습니다. 

*/

/* 
    4. 동그라미 4개 레이아웃

    큰 레이아웃
.service {
    background-color: #4e61c0;
    width: 100%;
    color: white;
    text-align: center;
    padding: 60px 30px 50px 30px;
  }
  .service-items {
    display: flex;
  }
  .service-items div {
    width: 25%;
  }
  
  나머지 쓸데없는 디자인들
  .service h5 {
    margin-bottom: 0px;
  }
  .service-icon {
    background: white;
    color: #4e61c0;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    box-sizing: border-box;
    padding: 15px;

    저는 이렇게 했습니다.

(설명1) display : flex를 주어서 박스 4개를 가로로 정렬하고

그 안에 아이콘과 제목을 집어넣었습니다. 끝 

물론 Font Awesome을 설치해서 아이콘을 집어넣었다고 합니다. 

*/

/* 
    5. 동그라미 4개 레이아웃 반응형은 

@media screen and (max-width : 992px) {
  .service-items {
    display: flex;
    flex-direction: column;
  }
  .service-items div {
    width: 100%;
  }
} 

이런 코드를 CSS 파일에 추가하면 되겠군요.

@media 어쩌구가 이미 있으면 귀찮게 또 만들지 말고 그 안에 집어넣도록 합시다.

*/


/* 
    6.포트폴리오 섹션 레이아웃 만들기

.portfolio {
  padding-top: 60px;
  padding-bottom: 60px;
  text-align: center;
}
.portfolio-item1 {
  float: left;
  width: 50%;
  height: 350px;
  background-image: url(portfolio-1.jpg);
  background-size: cover;
}


.portfolio-container {
  text-align: left;
  max-width: 1200px;
  margin: auto;
}
.portfolio-text {
  color: white;
  padding: 50px;
  width: 100%;
} 

(설명1) portfolio-container라는 큰 박스하나 안에

내부 div박스들 4개를 생성합니다. 그리고 float : left를 주었고 width : 50% 이렇게 설정하면

가로로 2열 배치가 끝납니다. 그리고 글을 안에 끄적였다고 합니다. 



(설명2) 그리고 float를 쓰셨다면

나중에 밑에 div박스를 추가하든 하셔서 clear : both 속성을 주는거 잊지 맙시다.



(설명3) 이미지가 너무 밝으면 흰 글씨가 안보일 수 있습니다.

약간 틴트를 주고 싶으면 

.portfolio-item1 {
  background-image: linear-gradient(rgba(0,0,0,0.4),rgba(0,0,0,0.4)), url(portfolio-1.jpg);
}

background-image를 이런 식으로도 줄 수 있습니다.

이러면 투명도 0.4인 검은색을 이미지 위에 씌워줍니다.

참고로 이미지 보정을 쉽게 하려면 filter : brightness(80%) 속성도 있긴 합니다. 

(filter 속성은 이미지 안에 있는 글자도 필터적용해버립니다.)


모바일에서 세로로 정렬하고 싶으면 당연히 media query가 필요합니다.

@media screen and (max-width : 992px) {
  .portfolio-item1 {
    float: none;
    width: 100%
  }
}

반응형은 쉬우니 알아서 추가해보면 되겠습니다.

*/